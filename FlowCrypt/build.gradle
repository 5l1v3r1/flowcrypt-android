/*
 * Business Source License 1.0 Â© 2017 FlowCrypt Limited (tom@cryptup.org).
 * Use limitations apply. See https://github.com/FlowCrypt/flowcrypt-android/blob/master/LICENSE
 * Contributors: DenBond7
 */

import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.gfx.ribbonizer:plugin:1.0.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'

SimpleDateFormat simpleDateFormat = new SimpleDateFormat('dd_MM_yyyy_HH_mm');

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "com.flowcrypt.email"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION_NAME as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("modified this..")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }

        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "flowcryptdebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', 'application_id', android.defaultConfig.applicationId
        }

        debug {
            versionNameSuffix '_' + defaultConfig.versionCode + '__' + simpleDateFormat.format(new Date())
            applicationIdSuffix '.debug'
            resValue 'string', 'application_id', android.defaultConfig.applicationId + applicationIdSuffix
        }
    }

    compileOptions {
        sourceCompatibility "${JAVA_SOURCE_COMPATIBILITY}"
        targetCompatibility "${JAVA_SOURCE_COMPATIBILITY}"
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
    }

    task renameReleaseBuild << {
        applicationVariants.all { variant ->
            if (variant.buildType.buildType == buildTypes.release) {
                variant.outputs.each { output ->
                    def file = output.outputFile
                    def newName = file.name.replace(".apk", "_" +
                            defaultConfig.versionCode +
                            "_" + defaultConfig.versionName +
                            "_" + simpleDateFormat.format(new Date()) + ".apk")
                    output.outputFile.renameTo(new File(file.parent, newName))
                }
            }
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name == 'assembleRelease') {
            task.finalizedBy 'renameReleaseBuild'
        }
    }
}

dependencies {
    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"

    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testCompile "junit:junit:${JUNIT_VERSION}"

    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "com.android.support:support-v4:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:preference-v14:${ANDROID_SUPPORT_VERSION}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile "com.google.android.gms:play-services-base:${PLAY_SERVICES_VERSION}"
    compile "com.google.android.gms:play-services-auth:${PLAY_SERVICES_VERSION}"
    compile 'com.google.code.gson:gson:2.7'

    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    compile "com.sun.mail:android-mail:${JAVA_MAIL_VERSION}"
    compile "com.sun.mail:android-activation:${JAVA_MAIL_VERSION}"
    compile("com.sun.mail:gimap:${JAVA_MAIL_VERSION}") {
        exclude group: 'com.sun.mail'
    }

    compile 'com.eclipsesource.j2v8:j2v8:4.6.0@aar'
    compile 'commons-io:commons-io:2.5'
    compile 'ch.acra:acra:4.9.2'
    compile 'com.hootsuite.android:nachos:1.1.1'
}

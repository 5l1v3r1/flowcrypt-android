/*
 * Â© 2016-2018 FlowCrypt Limited. Limitations apply. Contact human@flowcrypt.com
 * Contributors: DenBond7
 */


import groovy.swing.SwingBuilder

import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.gfx.ribbonizer:plugin:1.0.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'

SimpleDateFormat simpleDateFormat = new SimpleDateFormat('yyyy_MM_dd_HH_mm');

def keystoreProperties = new Properties()
File propertiesFile = project.file("keystore.properties");
if (propertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(propertiesFile))
}


static def inputPassword(String dialogTitle, String dialogMessage) {
    def console = System.console();
    if (console != null) {
        return new String(console.readPassword(dialogMessage)).trim()
    }

    while (true) {
        def enteredPassword = null
        new SwingBuilder().edt {
            dialog(
                    modal: true, //Otherwise the build will continue running
                    title: dialogTitle,
                    alwaysOnTop: true,
                    resizable: false,
                    locationRelativeTo: null, //Place dialog in center of the screen
                    pack: true, //We need to pack the dialog (so it will take the size of its children
                    show: true
            ) {
                vbox { //Put everything below each other
                    label(text: dialogMessage)
                    input = passwordField()
                    button(defaultButton: true, text: 'OK', actionPerformed: {
                        enteredPassword = new String(input.password).trim()
                        dispose();
                    })
                }
            }
        }
        return enteredPassword
    }
}

android {
    if (projects.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnable = false
    }

    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "com.flowcrypt.email"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION_NAME as String
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] != null ?
                    file(keystoreProperties['storeFile']) : file("change me...")
            storePassword keystoreProperties['storePassword']
        }

        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "flowcryptdebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'true'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'false'
            resValue 'string', 'application_id', android.defaultConfig.applicationId
            resValue 'string', 'gradle_is_acra_enable', 'true'
            resValue 'string', 'gradle_is_mail_debug_enable', 'false'
        }

        debug {
            versionNameSuffix '_' + defaultConfig.versionCode + '__' + simpleDateFormat.format(new Date())
            applicationIdSuffix '.debug'
            resValue 'string', 'application_id', android.defaultConfig.applicationId + applicationIdSuffix
        }
    }

    flavorDimensions "standard"

    productFlavors {
        //This flavor must be used only for a development.
        // It has settings for a fast building (some features are disabled or not included).
        development {
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'false'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'true'
            resValue 'string', 'gradle_is_acra_enable', 'false'
            resValue 'string', 'gradle_is_mail_debug_enable', 'true'
            versionNameSuffix "_dev"
            dimension "standard"
            minSdkVersion 21
            resConfigs "en", "xhdpi"
        }

        //This is a production flavor
        production {
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'true'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'false'
            resValue 'string', 'gradle_is_acra_enable', 'true'
            resValue 'string', 'gradle_is_mail_debug_enable', 'false'
            dimension "standard"
        }

        //This flavor must be used only for a testing
        devTest {
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'false'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'false'
            resValue 'string', 'gradle_is_acra_enable', 'false'
            resValue 'string', 'gradle_is_mail_debug_enable', 'false'
            versionNameSuffix "_devTest"
            dimension "standard"
        }
    }

    compileOptions {
        sourceCompatibility "${JAVA_SOURCE_COMPATIBILITY}"
        targetCompatibility "${JAVA_SOURCE_COMPATIBILITY}"
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
    }

    task renameReleaseBuild << {
        applicationVariants.all { variant ->
            if (variant.buildType.buildType == buildTypes.release) {
                variant.outputs.each { output ->
                    def file = output.outputFile
                    def newName = file.name.replace(".apk", "_" +
                            defaultConfig.versionCode +
                            "_" + defaultConfig.versionName +
                            "_" + simpleDateFormat.format(new Date()) + ".apk")
                    output.outputFile.renameTo(new File(file.parent, newName))
                }
            }
        }
    }

    task('inputKeyPasswords') {
        doLast {
            def keyStorePassword = null
            while (keyStorePassword == null || ((String) keyStorePassword).isEmpty()) {
                keyStorePassword = inputPassword('KeyStore password', 'Please enter the password for the keystore:')
            }

            def keyPassword = null
            while (keyPassword == null || ((String) keyPassword).isEmpty()) {
                keyPassword = inputPassword('Key password', 'Please enter the password for the signing key:')
            }
            System.out.println()

            android.signingConfigs.release.storePassword = keyStorePassword
            android.signingConfigs.release.keyPassword = keyPassword
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name == 'assembleProductionRelease') {
            if (project.hasProperty('runtimeSetup')) {
                task.dependsOn inputKeyPasswords
            }
            task.finalizedBy 'renameReleaseBuild'
        }
    }
}

dependencies {
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"

    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"

    androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${ESPRESSO_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.android.support:support-v4:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:preference-v14:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:customtabs:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support.test.espresso:espresso-idling-resource:${ESPRESSO_VERSION}"

    implementation "com.google.android.gms:play-services-base:${PLAY_SERVICES_VERSION}"
    implementation "com.google.android.gms:play-services-auth:${PLAY_SERVICES_VERSION}"
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.code.findbugs'
    }
    implementation('com.google.apis:google-api-services-gmail:v1-rev86-1.23.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.code.findbugs'
    }

    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"

    implementation ("com.sun.mail:android-mail:${JAVA_MAIL_VERSION}"){
        exclude group: 'javax.activation'
    }

    implementation("com.sun.mail:gimap:${JAVA_MAIL_VERSION}") {
        exclude group: 'com.sun.mail'
        exclude group: 'javax.activation'
    }

    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"

    implementation 'com.eclipsesource.j2v8:j2v8:4.8.2@aar'
    implementation 'commons-io:commons-io:2.6'
    implementation 'ch.acra:acra:4.11'
    implementation 'com.hootsuite.android:nachos:1.1.1'
    implementation 'com.nulab-inc:zxcvbn:1.2.5'
}

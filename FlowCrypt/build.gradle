/*
 * Â© 2016-2019 FlowCrypt Limited. Limitations apply. Contact human@flowcrypt.com
 * Contributors: DenBond7
 */

import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

SimpleDateFormat simpleDateFormat = new SimpleDateFormat('yyyy_MM_dd_HH_mm')

def keystoreProperties = new Properties()
File propertiesFile = project.file("keystore.properties")
if (propertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(propertiesFile))
}

android {
    if (projects.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnable = false
    }

    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "com.flowcrypt.email"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION_NAME as String
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64"
        }
    }

    signingConfigs {
        release {
            def keyStoreFile = keystoreProperties['storeFile']
            def keyStorePass = keystoreProperties['storePassword']
            def keySignAlias = keystoreProperties['keyAlias']
            def keyPass = keystoreProperties['keyPassword']

            if (project.hasProperty('runtimeSign')) {
                if (project.hasProperty('storeFile')) {
                    keyStoreFile = project.property("storeFile")
                }

                if (project.hasProperty('storePassword')) {
                    keyStorePass = project.property("storePassword")
                }

                if (project.hasProperty('keyAlias')) {
                    keySignAlias = project.property("keyAlias")
                }

                if (project.hasProperty('keyPassword')) {
                    keyPass = project.property("keyPassword")
                }
            }

            storeFile keyStoreFile != null ? file(keyStoreFile) : file("fix me...")
            storePassword keyStorePass
            keyAlias keySignAlias
            keyPassword keyPass
        }

        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "flowcryptdebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'true'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'false'
            resValue 'string', 'application_id', android.defaultConfig.applicationId
            resValue 'string', 'gradle_is_acra_enable', 'true'
            resValue 'string', 'gradle_is_mail_debug_enable', 'false'
        }

        debug {
            versionNameSuffix '_' + defaultConfig.versionCode + '__' + simpleDateFormat.format(new Date())
            applicationIdSuffix '.debug'
            resValue 'string', 'application_id', android.defaultConfig.applicationId + applicationIdSuffix
            signingConfig signingConfigs.debug
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    // If you want Gradle to package prebuilt native libraries
    // with your APK, modify the default source set configuration
    // to include the directory of your prebuilt .so files as follows.
    sourceSets {
        main {
            jniLibs.srcDirs 'libs/libnode/bin/'
        }
    }

    flavorDimensions "standard"

    productFlavors {
        //This flavor must be used only for a development.
        // It has settings for a fast building (some features are disabled or not included).
        dev {
            signingConfig signingConfigs.debug
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'false'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'true'
            resValue 'string', 'gradle_is_acra_enable', 'false'
            resValue 'string', 'gradle_is_mail_debug_enable', 'true'
            versionNameSuffix "_dev"
            dimension "standard"
            minSdkVersion MIN_SDK_VERSION as int
            resConfigs "en", "xhdpi"
        }

        //This is a production flavor
        prod {
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'true'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'false'
            resValue 'string', 'gradle_is_acra_enable', 'true'
            resValue 'string', 'gradle_is_mail_debug_enable', 'false'
            dimension "standard"
        }

        //This flavor must be used only for a testing
        devTest {
            signingConfig signingConfigs.debug
            buildConfigField 'boolean', 'IS_ACRA_ENABLE', 'false'
            buildConfigField 'boolean', 'IS_MAIL_DEBUG_ENABLE', 'false'
            resValue 'string', 'gradle_is_acra_enable', 'false'
            resValue 'string', 'gradle_is_mail_debug_enable', 'false'
            versionNameSuffix "_devTest"
            dimension "standard"
        }
    }

    compileOptions {
        sourceCompatibility "${JAVA_SOURCE_COMPATIBILITY}"
        targetCompatibility "${JAVA_SOURCE_COMPATIBILITY}"
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/eclipse.inf'
        exclude 'plugin.properties'
    }

    tasks.register('renameReleaseBuild') {
        doLast {
            applicationVariants.all { variant ->
                if (variant.buildType.buildType == buildTypes.release) {
                    variant.outputs.each { output ->
                        def file = output.outputFile
                        def newName = file.name.replace(".apk", "_" + defaultConfig.versionCode +
                                "_" + defaultConfig.versionName + "_" + simpleDateFormat.format(new Date()) + ".apk")
                        output.outputFile.renameTo(new File(file.parent, newName))
                    }
                }
            }
        }
    }

    tasks.configureEach { task ->
        if (task.name == 'packageProdRelease') {
            task.finalizedBy renameReleaseBuild
        }
    }
}

dependencies {
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"

    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"

    androidTestImplementation "androidx.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${ESPRESSO_VERSION}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    androidTestImplementation "androidx.test.ext:junit:1.1.0"

    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "androidx.legacy:legacy-support-v4:${ANDROIDX_BASE_VERSION}"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "androidx.legacy:legacy-preference-v14:${ANDROIDX_BASE_VERSION}"
    implementation "androidx.cardview:cardview:${ANDROIDX_BASE_VERSION}"
    implementation "androidx.browser:browser:${ANDROIDX_BASE_VERSION}"
    implementation "androidx.recyclerview:recyclerview:${ANDROIDX_BASE_VERSION}"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    implementation 'com.google.android.gms:play-services-base:16.1.0'
    implementation "com.google.android.gms:play-services-auth:${PLAY_SERVICES_VERSION}"
    implementation "com.google.android.material:material:${ANDROIDX_BASE_VERSION}"

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.code.findbugs'
    }
    implementation('com.google.apis:google-api-services-gmail:v1-rev96-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.code.findbugs'
    }

    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"

    implementation("com.sun.mail:android-mail:${JAVA_MAIL_VERSION}") {
        exclude group: 'javax.activation'
    }

    implementation("com.sun.mail:gimap:${JAVA_MAIL_VERSION}") {
        exclude group: 'com.sun.mail'
        exclude group: 'javax.activation'
    }

    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"
    annotationProcessor "androidx.annotation:annotation:${ANDROIDX_BASE_VERSION}"

    implementation 'com.eclipsesource.j2v8:j2v8:4.8.2@aar'
    implementation 'commons-io:commons-io:2.6'
    implementation 'ch.acra:acra:4.11'
    implementation 'com.hootsuite.android:nachos:1.1.1'
    implementation 'com.nulab-inc:zxcvbn:1.2.5'

    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
    implementation 'com.madgag.spongycastle:pkix:1.54.0.0'
    implementation 'com.liferay:javax.xml.bind:2.3.0.LIFERAY-PATCHED-1'
    implementation 'org.eclipse.birt.runtime.3_7_1:org.apache.xerces:2.9.0'
}
